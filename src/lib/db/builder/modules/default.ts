// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $RegionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "x": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "y": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "posts": $.PropertyDesc<_std.$json, $.Cardinality.AtMostOne, false, false, false, false>;
}>;
type $Region = $.ObjectType<"default::Region", $RegionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Region = $.makeType<$Region>(_.spec, "0d5fe1aa-931f-11ee-9271-e37d0d03f350", _.syntax.literal);

const Region: $.$expr_PathNode<$.TypeSet<$Region, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Region, $.Cardinality.Many), null);



export { $Region, Region };

type __defaultExports = {
  "Region": typeof Region
};
const __defaultExports: __defaultExports = {
  "Region": Region
};
export default __defaultExports;
